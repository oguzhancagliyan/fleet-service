version: '3.4'

services:
  fleet.api:
    image: ${DOCKER_REGISTRY-}fleet
    build:
      context: .
      dockerfile: src/Fleet.API/Dockerfile
    depends_on:
     - elasticsearch
    networks:
     - elastic
  elasticsearch:
   container_name: elasticsearch
   image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
   ports:
    - 9200:9200
   volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data
   environment:
    - xpack.monitoring.enabled=true
    - xpack.watcher.enabled=false
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    - discovery.type=single-node
   networks:
    - elastic
  kibana:
   container_name: kibana
   image: docker.elastic.co/kibana/kibana:7.6.2
   ports:
    - 5601:5601
   depends_on:
    - elasticsearch
   networks:
    - elastic
  cache:
    container_name: redis
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'   
    volumes: 
      - cache:/data
    networks:
    - elastic
  mongodb:
    container_name: mongo
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=fleet
      - MONGO_INITDB_ROOT_PASSWORD=fleet
    networks:
    - elastic
volumes:
  cache:
    driver: local
  elasticsearch-data:
  mongodb_data_container:
  
networks:
  elastic:
    driver: bridge
